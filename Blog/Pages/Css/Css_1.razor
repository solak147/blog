@page "/css1"
@inherits Blog.Base.Base

<h1 style="display: none;"> @h1Title - CSS EM 與 REM 的差異</h1>

<h2><b>EM 與 REM 的差異</b></h2>
<br />

<h3><b>PX</b></h3>
<p>
    一般來說，我們會使用 px 來作為網頁設計的單位，除了它精確度較高以外，對於許多網頁設計師來說也是相當容易入門的單位。<br />

    px 的特性是屬於 絕對數值，他不受外圍的單位影響，只要固定是 12px，就會以 12 像素呈現。<br />
    他並不會受到外圍文字大小所影響，內部的文字大小還是依據 CSS 設定所呈現。<br />
</p>

<h3><b>EM</b></h3>
<p>
    EM 與 REM 是 CSS 中用於定義字型大小的單位，它們的主要差異在於它們相對於不同參考對象的大小不同。<br />

    EM 單位是相對於元素的字型大小來定義的。當在父元素中定義字型大小時，子元素可以使用 EM 單位參考父元素的字型大小，例如：<br />
</p>
<pre><code class="css">
   .parent {
      font-size: 16px;
    }

    .child {
      font-size: 1.5em; /* 相當於 24px */
    }   
</code></pre>
<p>
    在這個例子中，.child 元素的字型大小是相對於其父元素 .parent 的字型大小 16px 而言的。如果 .parent 的字型大小變為 20px，那麼 .child 的字型大小也會跟著變為 30px。
</p>

<h3><b>REM</b></h3>
<p>
    REM 單位是相對於根元素（通常是 &lthtml> 元素）的字型大小來定義的。因為根元素的字型大小不會因其他元素的字型大小而改變，所以 REM 單位的大小也不會隨著其他元素的字型大小而改變。例如：
</p>
<pre><code class="css">
   html {
      font-size: 16px;
    }

    .child {
      font-size: 1.5rem; /* 相當於 24px */
    }
</code></pre>
<p>
    在這個例子中，.child 元素的字型大小是相對於根元素的字型大小 16px 而言的。即使其他元素的字型大小改變，.child 的字型大小也不會受到影響。<br />
</p>

<h3><b>REM 瀏覽器的限制</b></h3>
<table class="table">
    <tbody>
        <tr>
            <th>Feature</th>
            <th>Chrome</th>
            <th>Firefox (Gecko)</th>
            <th>Internet Explorer</th>
            <th>Opera</th>
            <th>Safari</th>
        </tr>
        <tr>
            <td><code>rem</code></td>
            <td>4 (532.3)</td>
            <td>>3.6 (1.9.2)</td>
            <td>9.0</td>
            <td>11.6</td>
            <td>4.1</td>
        </tr>
    </tbody>
</table>

<h3><b>實作上該如何選擇</b></h3>
<p>
    EM 的文字大小基準取決於父層的文字大小，所以建議使用在限制區域的內容、元件等等，就文字大小切換的效果來說，EM 可以輕易的從父層改變進而影響內容文字的大小。<br /><br />

    REM 的文字基準取決於最外層的 html 文字大小，很適合用在整體的尺寸大小切換，以 RWD 響應式網頁來說，可以依據不同的尺寸，統一切換整體網頁的文字大小。<br />
    以 Bootstrap 4 來說，許多元件都是以 REM 作為單位，所以只要改寫 HTML 的 font-size，就能一口氣修改全部元件的尺寸，<br /><br />

    總結來說，EM 單位相對於父元素的字型大小來定義，而 REM 單位相對於根元素的字型大小來定義。因此，使用 REM 單位可以更好地控制字型大小的變化，使得在不同的裝置上都能呈現出一致的設計效果。
</p>

<div>
    參考 :<a href="https://www.hexschool.com/2016/01/02/2016-08-08-em-vs-rem/">https://www.hexschool.com/2016/01/02/2016-08-08-em-vs-rem/</a>
</div>

@code {
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);

        seo.pageTitle = "CSS : EM 與 REM 的差異";
        seo.metaTitle = "CSS : EM 與 REM 的差異";
        seo.metaDescription = @"EM 是相對的的數值單位，它會受到外圍的文字大小所影響
            REM 也是相對的文字尺寸，和 EM 使用方法接近，不同的是他僅相對於 root 層級的文字大小";

        await base.SetParametersAsync(ParameterView.Empty);
    }
}
